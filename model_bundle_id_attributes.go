/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BundleIdAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BundleIdAttributes{}

// BundleIdAttributes struct for BundleIdAttributes
type BundleIdAttributes struct {
	Name string `json:"name"`
	Platform BundleIdPlatform `json:"platform"`
	Identifier string `json:"identifier"`
	SeedId string `json:"seedId"`
}

type _BundleIdAttributes BundleIdAttributes

// NewBundleIdAttributes instantiates a new BundleIdAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBundleIdAttributes(name string, platform BundleIdPlatform, identifier string, seedId string) *BundleIdAttributes {
	this := BundleIdAttributes{}
	this.Name = name
	this.Platform = platform
	this.Identifier = identifier
	this.SeedId = seedId
	return &this
}

// NewBundleIdAttributesWithDefaults instantiates a new BundleIdAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBundleIdAttributesWithDefaults() *BundleIdAttributes {
	this := BundleIdAttributes{}
	return &this
}

// GetName returns the Name field value
func (o *BundleIdAttributes) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BundleIdAttributes) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BundleIdAttributes) SetName(v string) {
	o.Name = v
}

// GetPlatform returns the Platform field value
func (o *BundleIdAttributes) GetPlatform() BundleIdPlatform {
	if o == nil {
		var ret BundleIdPlatform
		return ret
	}

	return o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value
// and a boolean to check if the value has been set.
func (o *BundleIdAttributes) GetPlatformOk() (*BundleIdPlatform, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Platform, true
}

// SetPlatform sets field value
func (o *BundleIdAttributes) SetPlatform(v BundleIdPlatform) {
	o.Platform = v
}

// GetIdentifier returns the Identifier field value
func (o *BundleIdAttributes) GetIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *BundleIdAttributes) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *BundleIdAttributes) SetIdentifier(v string) {
	o.Identifier = v
}

// GetSeedId returns the SeedId field value
func (o *BundleIdAttributes) GetSeedId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SeedId
}

// GetSeedIdOk returns a tuple with the SeedId field value
// and a boolean to check if the value has been set.
func (o *BundleIdAttributes) GetSeedIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SeedId, true
}

// SetSeedId sets field value
func (o *BundleIdAttributes) SetSeedId(v string) {
	o.SeedId = v
}

func (o BundleIdAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BundleIdAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["platform"] = o.Platform
	toSerialize["identifier"] = o.Identifier
	toSerialize["seedId"] = o.SeedId
	return toSerialize, nil
}

func (o *BundleIdAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"platform",
		"identifier",
		"seedId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBundleIdAttributes := _BundleIdAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varBundleIdAttributes)

	if err != nil {
		return err
	}

	*o = BundleIdAttributes(varBundleIdAttributes)

	return err
}

type NullableBundleIdAttributes struct {
	value *BundleIdAttributes
	isSet bool
}

func (v NullableBundleIdAttributes) Get() *BundleIdAttributes {
	return v.value
}

func (v *NullableBundleIdAttributes) Set(val *BundleIdAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableBundleIdAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableBundleIdAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBundleIdAttributes(val *BundleIdAttributes) *NullableBundleIdAttributes {
	return &NullableBundleIdAttributes{value: val, isSet: true}
}

func (v NullableBundleIdAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBundleIdAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


