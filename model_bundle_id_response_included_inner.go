/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)


// BundleIdResponseIncludedInner struct for BundleIdResponseIncludedInner
type BundleIdResponseIncludedInner struct {
	App *App
	BundleIdCapability *BundleIdCapability
	Profile *Profile
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *BundleIdResponseIncludedInner) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into App
	err = json.Unmarshal(data, &dst.App);
	if err == nil {
		jsonApp, _ := json.Marshal(dst.App)
		if string(jsonApp) == "{}" { // empty struct
			dst.App = nil
		} else {
			return nil // data stored in dst.App, return on the first match
		}
	} else {
		dst.App = nil
	}

	// try to unmarshal JSON data into BundleIdCapability
	err = json.Unmarshal(data, &dst.BundleIdCapability);
	if err == nil {
		jsonBundleIdCapability, _ := json.Marshal(dst.BundleIdCapability)
		if string(jsonBundleIdCapability) == "{}" { // empty struct
			dst.BundleIdCapability = nil
		} else {
			return nil // data stored in dst.BundleIdCapability, return on the first match
		}
	} else {
		dst.BundleIdCapability = nil
	}

	// try to unmarshal JSON data into Profile
	err = json.Unmarshal(data, &dst.Profile);
	if err == nil {
		jsonProfile, _ := json.Marshal(dst.Profile)
		if string(jsonProfile) == "{}" { // empty struct
			dst.Profile = nil
		} else {
			return nil // data stored in dst.Profile, return on the first match
		}
	} else {
		dst.Profile = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(BundleIdResponseIncludedInner)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src BundleIdResponseIncludedInner) MarshalJSON() ([]byte, error) {
	if src.App != nil {
		return json.Marshal(&src.App)
	}

	if src.BundleIdCapability != nil {
		return json.Marshal(&src.BundleIdCapability)
	}

	if src.Profile != nil {
		return json.Marshal(&src.Profile)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableBundleIdResponseIncludedInner struct {
	value *BundleIdResponseIncludedInner
	isSet bool
}

func (v NullableBundleIdResponseIncludedInner) Get() *BundleIdResponseIncludedInner {
	return v.value
}

func (v *NullableBundleIdResponseIncludedInner) Set(val *BundleIdResponseIncludedInner) {
	v.value = val
	v.isSet = true
}

func (v NullableBundleIdResponseIncludedInner) IsSet() bool {
	return v.isSet
}

func (v *NullableBundleIdResponseIncludedInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBundleIdResponseIncludedInner(val *BundleIdResponseIncludedInner) *NullableBundleIdResponseIncludedInner {
	return &NullableBundleIdResponseIncludedInner{value: val, isSet: true}
}

func (v NullableBundleIdResponseIncludedInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBundleIdResponseIncludedInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


